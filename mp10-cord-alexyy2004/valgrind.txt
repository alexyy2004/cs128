==11290== Memcheck, a memory error detector
==11290== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11290== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==11290== Command: ./bin/exec
==11290== Parent PID: 8187
==11290== 
==11290== Conditional jump or move depends on uninitialised value(s)
==11290==    at 0x109870: Cord::~Cord() (cord.hpp:26)
==11290==    by 0x10982F: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:36)
==11290==    by 0x10919B: main (driver.cc:19)
==11290== 
==11290== Use of uninitialised value of size 8
==11290==    at 0x109750: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:29)
==11290==    by 0x10989B: Cord::~Cord() (cord.hpp:28)
==11290==    by 0x10982F: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:36)
==11290==    by 0x10919B: main (driver.cc:19)
==11290== 
==11290== Invalid read of size 4
==11290==    at 0x109750: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:29)
==11290==    by 0x10989B: Cord::~Cord() (cord.hpp:28)
==11290==    by 0x10982F: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:36)
==11290==    by 0x10919B: main (driver.cc:19)
==11290==  Address 0x1fff00052800 is not stack'd, malloc'd or (recently) free'd
==11290== 
==11290== 
==11290== Process terminating with default action of signal 11 (SIGSEGV)
==11290==  Access not within mapped region at address 0x1FFF00052800
==11290==    at 0x109750: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:29)
==11290==    by 0x10989B: Cord::~Cord() (cord.hpp:28)
==11290==    by 0x10982F: SharedPointer<Cord>::~SharedPointer() (shared_pointer.hpp:36)
==11290==    by 0x10919B: main (driver.cc:19)
==11290==  If you believe this happened as a result of a stack
==11290==  overflow in your program's main thread (unlikely but
==11290==  possible), you can try to increase the size of the
==11290==  main thread stack using the --main-stacksize= flag.
==11290==  The main thread stack size used in this run was 8388608.
==11290== 
==11290== HEAP SUMMARY:
==11290==     in use at exit: 73,901 bytes in 15 blocks
==11290==   total heap usage: 16 allocs, 1 frees, 73,905 bytes allocated
==11290== 
==11290== LEAK SUMMARY:
==11290==    definitely lost: 0 bytes in 0 blocks
==11290==    indirectly lost: 0 bytes in 0 blocks
==11290==      possibly lost: 0 bytes in 0 blocks
==11290==    still reachable: 73,901 bytes in 15 blocks
==11290==         suppressed: 0 bytes in 0 blocks
==11290== Reachable blocks (those to which a pointer was found) are not shown.
==11290== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11290== 
==11290== Use --track-origins=yes to see where uninitialised values come from
==11290== For lists of detected and suppressed errors, rerun with: -s
==11290== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
